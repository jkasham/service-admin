{"version":3,"sources":["views/HomePage.js","components/DataGrid.js","views/CustomerList.js","views/ContractorList.js","views/WorkOrderList.js","components/UserDropMenu.js","NavBar.js","views/customer/CustomerSideBar.js","components/Tab.js","components/Tabs.js","views/customer/CustomerTabbedView.js","views/CustomerView.js","App.js","serviceWorker.js","index.js"],"names":["HomePage","DataGrid","columns","data","useTable","disableSortRemove","useSortBy","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","className","map","headerGroup","getHeaderGroupProps","headers","column","isSorted","isSortedDesc","getHeaderProps","getSortByToggleProps","render","row","getRowProps","cells","cell","getCellProps","CustomerList","useState","setCustList","gridRows","setGridRows","custListIsLoaded","setCustListIsLoaded","gridCols","React","useMemo","Header","accessor","Cell","cellInfo","to","id","value","displayNameCellRenderer","useEffect","console","log","a","fetch","result","json","body","QueryResponse","Customer","custData","cust","display_name","DisplayName","phone","PrimaryPhone","FreeFormNumber","email","PrimaryEmailAddr","Address","Id","push","fetchData","ContractorList","WorkOrderList","UserDropMenu","isActive","setIsActive","closeUserMenu","ev","preventDefault","document","removeEventListener","data-dropmenu","data-noactive","onClick","addEventListener","src","alt","data-test","window","location","NavBar","CustomerSideBar","customerInfo","customerIncome","income","expense","Tab","props","label","this","activeTab","href","Component","Tabs","onClickTabItem","tab","setState","state","children","child","key","currFormatter","num","Intl","NumberFormat","style","currency","format","rowTypeBackgroundStyle","inv","today","Date","balance","backgroundColor","due_date","CustomerTabbedView","custInvoiceList","setCustInvoiceList","setCustInvoiceListIsLoaded","invoiceList","Invoice","invoice_id","DueDate","total","TotalAmt","Balance","textAlign","date","DateTimeFormat","CustomerView","match","params","setCustData","custIncomeData","setCustInfoData","setCustDataIsLoaded","custInfo","fetchIncomeData","report","Rows","Row","ColData","incomeData","net_income","viewBox","d","App","path","component","exact","Boolean","hostname","ReactDOM","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"8WAMeA,EAJE,kBACb,+D,8CCgDWC,G,MA9CE,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,QAASC,EAAW,EAAXA,KAAW,EAGyCC,mBAAS,CAAEF,UAASC,OAAME,mBAAkB,GAAQC,aAAzHC,EAH4B,EAG5BA,cAAeC,EAHa,EAGbA,kBAAmBC,EAHN,EAGMA,aAAcC,EAHpB,EAGoBA,KAAMC,EAH1B,EAG0BA,WAE9D,OACI,yBAAKC,UAAU,QACf,yCAAOA,UAAU,sBAAyBL,KAExC,+BACGE,EAAaI,KAAI,SAAAC,GAAW,OAC3B,sCAAIF,UAAU,mBAAsBE,EAAYC,uBAC7CD,EAAYE,QAAQH,KAAI,SAAAI,GAAM,OAC7B,sCAAIL,UAAS,2BAAsBK,EAAOC,SAAWD,EAAOE,aAAe,aAAe,YAAa,KACjGF,EAAOG,eAAeH,EAAOI,yBACjC,yBAAKT,UAAU,qBACVK,EAAOK,OAAO,oBAQ7B,0BAAWd,IACRE,EAAKG,KAAI,SAAAU,GAER,OADAZ,EAAWY,GAET,sCAAIX,UAAU,WAAcW,EAAIC,eAC7BD,EAAIE,MAAMZ,KAAI,SAAAa,GACb,OACE,sCAAId,UAAU,iBAAoBc,EAAKC,gBACpCD,EAAKJ,OAAO,qBCgCtBM,EAhEM,WAAO,IAAD,EAGSC,mBAAS,IAHlB,mBAGNC,GAHM,aAISD,mBAAS,IAJlB,mBAIhBE,EAJgB,KAINC,EAJM,OAMyBH,oBAAS,GANlC,mBAMhBI,EANgB,KAMEC,EANF,KAYjBC,EAAWC,IAAMC,SAAS,iBAAM,CAClC,CAAEC,OAAQ,eAAgBC,SAAU,eAAgBC,KAAM,SAACC,GAAD,OAK9D,SAAiCA,GAC7B,OAAO,kBAAC,IAAD,CAAMC,GAAE,oBAAeD,EAASlB,IAAIoB,KAAOF,EAASG,OANaC,CAAwBJ,KAChG,CAAEH,OAAQ,eAAgBC,SAAU,SACpC,CAAED,OAAQ,gBAAiBC,SAAU,YACvC,IAiCF,OA3BAO,qBAAU,WACNC,QAAQC,IAAR,mBACe,uCAAG,wCAAAC,EAAA,sEACOC,MAAM,kBADb,cACRC,EADQ,gBAEKA,EAAOC,OAFZ,OAERC,EAFQ,OAIdvB,EAAYuB,EAAKC,cAAcC,UAE3BC,EAAW,GAND,cAOOH,EAAKC,cAAcC,UAP1B,IAOd,2BAAWJ,EAAuC,QAC1CM,EAAO,CAACC,aAAeP,EAAOQ,YACtBC,MAAOT,EAAOU,aAAaC,eAC3BC,MAAOZ,EAAOa,iBAAiBC,QAC/BtB,GAAIQ,EAAOe,IAEvBV,EAASW,KAAKV,GAbJ,8BAgBdzB,EAAYwB,GACZtB,GAAoB,GAjBN,4CAAH,oDAqBfkC,KACD,IAGCnC,EASI,kBAAC,EAAD,CAAU/B,QAASiC,EAAUhC,KAAM4B,IAPnC,oCACA,6CACA,2CCpDGsC,EAJQ,kBACnB,gDCQWC,EARO,WAElB,OACI,+CCqGOC,G,YArGM,WAAO,IAAD,EACM1C,oBAAS,GADf,mBACnB2C,EADmB,KACTC,EADS,KAyBvB,SAASC,EAAeC,GAC1BA,EAAGC,iBAEGC,SAASC,oBAAoB,QAASJ,GAC5CD,GAAY,GAkCb,OA5DG3B,qBAAU,WACT0B,EACFzB,QAAQC,IAAI,oBAKZD,QAAQC,IAAI,yBAsDZ,oCACA,yBAAKpC,UAAU,uBACd,kBAAC,IAAD,CAAM8B,GAAG,IAAIqC,gBAAc,UAAUC,gBAAc,OAAOpE,UAAW4D,EAAW,+BAAiC,wBAAyBS,QAnD7I,SAAuBN,GACtBA,EAAGC,iBAECJ,IACHC,GAAY,GACZI,SAASK,iBAAiB,QAASR,MA+CjC,yBAAKS,IAAI,uBAAuBC,IAAI,YACpC,yBAAKxE,UAAU,YACd,0BAAMA,UAAU,OAAOyE,YAAU,QAAjC,SACA,0BAAMzE,UAAU,UAAUyE,YAAU,WAApC,mBAIDb,GACD,yBAAK5D,UAAU,kCACd,wBAAIA,UAAU,kBACb,4BACC,kBAAC,IAAD,CAAM8B,GAAG,yBACR,gDAGF,4BACC,kBAAC,IAAD,CAAMA,GAAG,aACR,4CAGF,wBAAI9B,UAAU,sBACd,4BACC,kBAAC,IAAD,CAAMqE,QA/BZ,WACCK,OAAOC,SAAW,sCA+BZ,gDChEOC,EAzBA,WAEX,OAEI,6BACA,kBAAC,EAAD,MAEA,yBAAK5E,UAAU,eACX,yBAAK+B,GAAG,WAAW/B,UAAU,YAC7B,0BAAMA,UAAU,YACZ,yBAAKA,UAAU,kBAAiB,wBAAIA,UAAU,QAAO,kBAAC,IAAD,CAAM8B,GAAG,KAAT,kBACrD,yBAAKC,GAAG,mBACR,4BAAI,kBAAC,IAAD,CAAMD,GAAG,KAAI,0BAAM9B,UAAU,SAAhB,UACjB,4BAAI,kBAAC,IAAD,CAAM8B,GAAG,cAAa,0BAAM9B,UAAU,SAAhB,eAC1B,4BAAI,kBAAC,IAAD,CAAM8B,GAAG,gBAAe,0BAAM9B,UAAU,SAAhB,iBAC5B,4BAAI,kBAAC,IAAD,CAAM8B,GAAG,eAAc,0BAAM9B,UAAU,SAAhB,oBAInC,yBAAKA,UAAU,eCqDR6E,G,MA5ES,SAAC,GAAoC,IAAnCC,EAAkC,EAAlCA,aAAcC,EAAoB,EAApBA,eAEpC,OAEQ,yBAAK/E,UAAU,WACX,yBAAKA,UAAU,qBACX,yBAAKA,UAAU,eACX,0BAAMA,UAAU,cAAhB,YAEJ,yBAAKA,UAAU,cAEX,yBAAKA,UAAU,mCACX,yBAAKA,UAAU,sBAAqB,0BAAMA,UAAU,SAAhB,SACpC,yBAAKA,UAAU,gCAA+B,0BAAMA,UAAU,SAAS8E,EAAahC,gBAGxF,yBAAK9C,UAAU,mCACX,yBAAKA,UAAU,sBAAqB,0BAAMA,UAAU,SAAhB,YACpC,yBAAKA,UAAU,gCAA+B,0BAAMA,UAAU,SAAhB,kCAGlD,yBAAKA,UAAU,mCACX,yBAAKA,UAAU,sBAAqB,0BAAMA,UAAU,SAAhB,UACpC,yBAAKA,UAAU,gCAA+B,0BAAMA,UAAU,SAAS8E,EAAa9B,SAGxF,yBAAKhD,UAAU,mCACX,yBAAKA,UAAU,sBAAqB,0BAAMA,UAAU,SAAhB,UACpC,yBAAKA,UAAU,gCAA+B,0BAAMA,UAAU,SAAS8E,EAAa3B,WAMhG,yBAAKnD,UAAU,UACX,yBAAKA,UAAU,eACX,0BAAMA,UAAU,cAAhB,aAEJ,yBAAKA,UAAU,UAEX,yBAAKA,UAAU,YACX,wBAAIA,UAAU,cAAd,SACA,yBAAKA,UAAU,QACX,yBAAKA,UAAU,OACX,yBAAKA,UAAU,iBAKvB,yBAAKA,UAAU,UACX,yBAAKA,UAAU,aAAY,0BAAMA,UAAU,SAAhB,UAC3B,yBAAKA,UAAU,uBAAsB,0BAAMA,UAAU,SAAS+E,EAAeC,WAIrF,yBAAKhF,UAAU,YACX,wBAAIA,UAAU,cAAd,YACA,yBAAKA,UAAU,QACX,yBAAKA,UAAU,OACX,yBAAKA,UAAU,iBAKvB,yBAAKA,UAAU,UACX,yBAAKA,UAAU,aAAY,0BAAMA,UAAU,SAAhB,UAC3B,yBAAKA,UAAU,uBAAsB,0BAAMA,UAAU,SAAS+E,EAAeE,iB,gCCnC9FC,E,4MAtBbb,QAAU,WAAO,IAAD,EACa,EAAKc,MAAxBC,EADM,EACNA,OACRf,EAFc,EACCA,SACPe,I,uDAGA,IACDf,EAAsCgB,KAAtChB,QADA,EACsCgB,KAA7BF,MAAQG,EADjB,EACiBA,UAAWF,EAD5B,EAC4BA,MAE/BpF,EAAY,gBAMhB,OAJIsF,IAAcF,IAChBpF,GAAa,WAIb,wBAAIA,UAAWA,EAAWqE,QAASA,GAC/B,uBAAGkB,KAAK,KAAI,0BAAMvF,UAAU,uBAAuBoF,S,GAvB3CI,aCuDHC,E,kDAlDX,WAAYN,GAAQ,IAAD,8BACf,cAAMA,IAOVO,eAAiB,SAACC,GACd,EAAKC,SAAS,CAAEN,UAAWK,KAN3B,EAAKE,MAAQ,CACTP,UAAW,EAAKH,MAAMW,SAAS,GAAGX,MAAMC,OAJ7B,E,qDAYT,IAEFM,EAOAL,KAPAK,eAEII,EAKJT,KANAF,MACIW,SAGAR,EAEJD,KAHAQ,MACIP,UAIR,OAEI,yBAAKtF,UAAU,eACX,yBAAKA,UAAU,QACX,wBAAIA,UAAU,WAEN8F,EAAS7F,KAAI,SAAC8F,GAAW,IACbX,EAAUW,EAAMZ,MAAhBC,MACR,OAAQ,kBAAC,EAAD,CAAKE,UAAWA,EAAWU,IAAKZ,EAAOA,MAAOA,EAAOf,QAASqB,QAIlF,yBAAK1F,UAAU,WAEP8F,EAAS7F,KAAI,SAAC8F,GACV,GAAIA,EAAMZ,MAAMC,QAAUE,EAC1B,OAAOS,EAAMZ,MAAMW,mB,GA5ChCN,aCCbS,G,MAAgB,SAACC,GACnB,OAAO,IAAIC,KAAKC,aAAa,QAAS,CAACC,MAAO,WAAYC,SAAU,QAAQC,OAAOL,KAOjFM,EAAyB,SAACC,GAE5B,IAAIC,EAAQ,IAAIC,KAEhB,OAAkB,GAAfF,EAAIG,QACI,CAACC,gBAAiB,WAClBH,EAAQ,IAAIC,KAAKF,EAAIK,UACrB,CAACD,gBAAiB,gBADtB,GAiFIE,EA3EY,SAAC,GAAU,IAAThF,EAAQ,EAARA,GAAQ,EAEad,mBAAS,IAFtB,mBAE1B+F,EAF0B,KAETC,EAFS,OAG6BhG,oBAAS,GAHtC,mBAGDiG,GAHC,WA8BjC,OAxBAhF,qBAAU,WACNC,QAAQC,IAAR,mBACe,uCAAG,wCAAAC,EAAA,sEACOC,MAAM,kBAAD,OAAmBP,EAAnB,kBADZ,cACRQ,EADQ,gBAEKA,EAAOC,OAFZ,OAERC,EAFQ,OAIV0E,EAAc,GAJJ,cAKO1E,EAAKC,cAAc0E,SAL1B,IAKd,2BAAW7E,EAAsC,QACzCkE,EAAM,CAACY,WAAa9E,EAAOe,GACnBwD,SAAUvE,EAAO+E,QACjBC,MAAOhF,EAAOiF,SACdZ,QAASrE,EAAOkF,SAE5BN,EAAY5D,KAAKkD,GAXP,8BAcdQ,EAAmBE,GACnBD,GAA2B,GAfb,4CAAH,oDAmBf1D,KACD,IAGC,kBAAC,EAAD,KACI,yBAAK4B,MAAM,YACP,yBAAKpF,UAAU,cAGX,yBAAKA,UAAU,eACX,yBAAKA,UAAU,cACX,yBAAKA,UAAU,kBAAf,kBACA,yBAAKA,UAAU,kBAAf,YACA,yBAAKA,UAAU,iBAAiBqG,MAAO,CAACqB,UAAW,UAAnD,WACA,yBAAK1H,UAAU,iBAAiBqG,MAAO,CAACqB,UAAW,UAAnD,UAEPV,EAAgB/G,KAAI,SAACwG,EAAKT,GAAN,OACjB,yBAAKhG,UAAU,UAAUgG,IAAKS,EAAIY,YAC9B,yBAAKrH,UAAU,YAAW,yBAAKA,UAAU,UAAUqG,MAAOG,EAAuBC,IAAvD,WAA2EA,EAAIY,YACzG,yBAAKrH,UAAU,aA9DpB2H,EA8D8ClB,EAAIK,SA7D9D,IAAIX,KAAKyB,eAAe,SAASrB,OAAO,IAAII,KAAKgB,MA8DhC,yBAAK3H,UAAU,WAAWqG,MAAO,CAACqB,UAAW,UAAWzB,EAAcQ,EAAIG,UAC1E,yBAAK5G,UAAU,WAAWqG,MAAO,CAACqB,UAAW,UAAWzB,EAAcQ,EAAIc,SAhEhF,IAACI,QAwEX,yBAAKvC,MAAM,eACP,yBAAKpF,UAAU,cAAf,iBACkB,yCADlB,MAIJ,yBAAKoF,MAAM,YACP,yBAAKpF,UAAU,cAAf,iBACc,yCADd,MAIJ,yBAAKoF,MAAM,SACP,yBAAKpF,UAAU,cAAf,oCACqC,uCADrC,QCdD6H,G,MAzEM,SAAC,GAAe,IAE3B9F,EAF0B,EAAZ+F,MAEHC,OAAOhG,GAFQ,EAIAd,mBAAS,IAJT,mBAIzB2B,EAJyB,KAIfoF,EAJe,OAKU/G,mBAAS,IALnB,mBAKzBgH,EALyB,KAKTC,EALS,OAMgBjH,oBAAS,GANzB,mBAMPkH,GANO,WA8ChC,OArCAjG,qBAAU,WACNC,QAAQC,IAAR,mBACA,IAAMoB,EAAS,uCAAG,kCAAAnB,EAAA,sEACOC,MAAM,iBAAD,OAAkBP,IAD9B,cACRQ,EADQ,gBAEKA,EAAOC,OAFZ,OAERC,EAFQ,OAIRI,EAAOJ,EAAKE,SAEZyF,EAAW,CAACtF,aAAeD,EAAKE,YAC1BC,MAAOH,EAAKI,aAAaC,eACzBC,MAAON,EAAKO,iBAAiBC,QAC7BtB,GAAIc,EAAKS,IAGrBnB,QAAQC,IAAIgG,GACZJ,EAAYI,GACZD,GAAoB,GAdN,4CAAH,qDAiBTE,EAAe,uCAAG,kCAAAhG,EAAA,sEACCC,MAAM,iBAAD,OAAkBP,EAAlB,YADN,cACdQ,EADc,gBAEDA,EAAOC,OAFN,OAEdC,EAFc,OAGd6F,EAAS7F,EAAK8F,KAAKC,IAAI,GAAGC,QAE1BC,EAAa,CAAC1D,OAAQsD,EAAO,GAAGtG,MAAOiD,QAASqD,EAAO,GAAGtG,MAAO2G,WAAYL,EAAO,GAAGtG,OAE7FG,QAAQC,IAAIkG,GACZJ,EAAgBQ,GARI,4CAAH,qDAarBlF,IACA6E,MACD,IAIC,yBAAKrI,UAAU,qBACX,yBAAKA,UAAU,cACX,yBAAKA,UAAU,aACX,yBAAKA,UAAU,WACX,yBAAKA,UAAU,8BACX,yBAAKA,UAAU,QACX,yBAAKA,UAAU,6BACf,yBAAK+B,GAAG,cAAc6G,QAAQ,aAAY,0BAAMC,EAAE,4GAI1D,4BAAKjG,EAASE,cACd,yBAAK9C,UAAU,aAGvB,yBAAKA,UAAU,aACX,kBAAC,EAAD,CAAiB8E,aAAclC,EAAUmC,eAAgBkD,IACzD,yBAAKjI,UAAU,WACX,kBAAC,EAAD,CAAoB+B,GAAIA,UCjCjC+G,MApBf,WACE,OACI,kBAAC,IAAD,KACA,kBAAC,EAAD,MACA,yBAAK/G,GAAG,wBACN,yBAAKA,GAAG,eACN,yBAAKA,GAAG,WAAW/B,UAAU,iBAC7B,kBAAC,IAAD,CAAO+I,KAAK,IAAIC,UAAW5J,EAAU6J,OAAK,IAC1C,kBAAC,IAAD,CAAOF,KAAK,aAAaC,UAAWhI,IACpC,kBAAC,IAAD,CAAO+H,KAAK,gBAAgBC,UAAWnB,IACvC,kBAAC,IAAD,CAAOkB,KAAK,eAAeC,UAAWvF,IACtC,kBAAC,IAAD,CAAOsF,KAAK,cAAcC,UAAWtF,SCjB3BwF,QACW,cAA7BxE,OAAOC,SAASwE,UAEe,UAA7BzE,OAAOC,SAASwE,UAEhBzE,OAAOC,SAASwE,SAASrB,MACvB,2DCZNsB,IAAS1I,OACP,kBAAC,IAAM2I,WAAP,KACE,kBAAC,EAAD,OAEFpF,SAASqF,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACL3H,QAAQ2H,MAAMA,EAAMC,c","file":"static/js/main.099c26fd.chunk.js","sourcesContent":["import React from 'react';\n\nconst HomePage = () => (\n    <h1>Hello, welcome to ServiceAdmin</h1>\n);\n\nexport default HomePage;","import React from 'react';\nimport { useTable, useSortBy } from 'react-table';\n\nimport './DataGrid.css';\n\nconst DataGrid = ({ columns, data }) => {\n\n\n    const { getTableProps, getTableBodyProps, headerGroups, rows, prepareRow } = useTable({ columns, data, disableSortRemove:true }, useSortBy)\n\n    return (\n        <div className=\"grid\">\n        <table className=\"gridContent__table\" {...getTableProps()}>\n          \n          <thead>\n            {headerGroups.map(headerGroup => (\n              <tr className=\"gridHeader__row\" {...headerGroup.getHeaderGroupProps()}>\n                {headerGroup.headers.map(column => (\n                  <th className={`gridHeader__cell ${column.isSorted ? column.isSortedDesc ? 'descending' : 'ascending': ''}`}\n                    {...column.getHeaderProps(column.getSortByToggleProps())}>\n                    <div className=\"headerContentItem\">\n                        {column.render('Header')}\n                    </div>\n                  </th>\n                ))}\n              </tr>\n            ))}\n          </thead>\n\n          <tbody {...getTableBodyProps()}>\n            {rows.map(row => {\n              prepareRow(row)\n              return (\n                <tr className=\"gridRow\" {...row.getRowProps()}>\n                  {row.cells.map(cell => {\n                    return (\n                      <td className=\"gridRow__cell\" {...cell.getCellProps()}>\n                        {cell.render('Cell')}\n                      </td>\n                    )\n                  })}\n                </tr>\n              )\n            })}\n          </tbody>\n        </table>\n        </div>\n      )\n\n }\n\nexport default DataGrid;","import React, {useState, useEffect} from 'react';\nimport { Link } from 'react-router-dom';\n\nimport DataGrid from '../components/DataGrid';\n\nconst CustomerList = () => {\n\n\n    const [custList, setCustList] = useState([]);\n    const [gridRows, setGridRows] = useState([]);\n    //const [gridCols, setGridCols] = useState([]);\n    const [custListIsLoaded, setCustListIsLoaded] = useState(false);\n\n\n    //const gridData = React.useMemo( () => {gridRows}, [] );\n    //const gridCols = React.useMemo( () => {gridCols}, [] );\n\n    const gridCols = React.useMemo( () => [\n        { Header: 'Display Name', accessor: 'display_name', Cell: (cellInfo) => displayNameCellRenderer(cellInfo)},\n        { Header: 'Phone Number', accessor: 'phone'},\n        { Header: 'Email Address', accessor: 'email'},\n    ],[])\n\n    function displayNameCellRenderer(cellInfo) {\n        return <Link to={`/customer/${cellInfo.row.id}`}>{cellInfo.value}</Link>\n    }\n\n    useEffect(() => {\n        console.log(`FETCH CUST DATA`);\n        const fetchData = async () => {\n            const result = await fetch('/api/customers');\n            const body = await result.json();\n\n            setCustList(body.QueryResponse.Customer);\n\n            let custData = [];\n            for (const result of body.QueryResponse.Customer) {\n                let cust = {display_name : result.DisplayName,\n                            phone: result.PrimaryPhone.FreeFormNumber,\n                            email: result.PrimaryEmailAddr.Address,\n                            id: result.Id\n                };\n                custData.push(cust);\n            }\n        \n            setGridRows(custData);\n            setCustListIsLoaded(true);\n\n        }\n        \n        fetchData();\n    }, []);\n\n\n    if(!custListIsLoaded) {\n        return (\n            <>\n            <h1>Customer List</h1>\n            <p>Loading...</p>\n            </>\n        )\n    }else {\n        return (\n            <DataGrid columns={gridCols} data={gridRows} />\n        )\n    }\n    \n}\n\nexport default CustomerList;","import React from 'react';\n\nconst ContractorList = () => (\n    <h1>Contractor List</h1>\n);\n\nexport default ContractorList;","import React from 'react';\n\n\nconst WorkOrderList = () => {\n\n    return (\n        <h1>Workorder List</h1>\n    )\n}\n\n\nexport default WorkOrderList;","import React, {useState, useEffect} from 'react';\nimport ReactDOM from 'react-dom';\nimport { Link, Redirect } from 'react-router-dom';\n\nimport './UserDropMenu.css';\n\nconst UserDropMenu = () => {\n\tconst [isActive, setIsActive] = useState(false);\n  \n    useEffect(() => {\n\t\tif(isActive) {\n\t\t\tconsole.log('DROPDOWN: active');\n\n\t\t\t//ReactDOM.render( dropDown(), document.getElementById('root'));\n\n\t\t} else {\n\t\t\tconsole.log('DROPDOWN: inactive');\n\t\t}\n\n\t});\n\n\tfunction dropUserMenu (ev) {\n\t\tev.preventDefault();\n\n\t\tif(!isActive) {\n\t\t\tsetIsActive(true);\n\t\t\tdocument.addEventListener('click', closeUserMenu);\n\t\t}\n\n    };\n\n    function closeUserMenu (ev) {\n\t\tev.preventDefault();\n\n        document.removeEventListener('click', closeUserMenu);\n\t\tsetIsActive(false);\n\t}\n\t\n\tfunction dropDown() {\n\t\treturn (\n\t\t\t<div className=\"dropMenu right dropMenuVisible\">\n\t\t\t\t<ul className=\"headerDropMenu\">\t\n\t\t\t\t\t<li>\n\t\t\t\t\t\t<Link to=\"/users/details/138200\">\n\t\t\t\t\t\t\t<span>User profile</span>\n\t\t\t\t\t\t</Link>\n\t\t\t\t\t</li>\n\t\t\t\t\t<li>\n\t\t\t\t\t\t<Link to=\"/settings\">\n\t\t\t\t\t\t\t<span>Settings</span>\n\t\t\t\t\t\t</Link>\n\t\t\t\t\t</li>\n\t\t\t\t\t<li className=\"dropMenuSeparator\"></li>\n\t\t\t\t\t<li>\n\t\t\t\t\t\t\t<Link to=\"/auth/logout\">\n\t\t\t\t\t\t\t\t<span>Log out</span>\n\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t</li>\n\t\t\t\t</ul>\n\t\t\t</div>\n\t\t\n\t\t);\n\t}\n\n\tfunction logout() {\n\t\twindow.location = 'http://localhost:8000/auth/logout';\n\t}\n\n\n\treturn (\n\t\t\t<>\n\t\t\t<div className=\"user-profile-corner\">\n\t\t\t\t<Link to=\"#\" data-dropmenu=\"profile\" data-noactive=\"true\" className={isActive ? \"profilePictureTooltip active\" : \"profilePictureTooltip\"} onClick={dropUserMenu}>\n\t\t\t\t\t<img src=\"/profile_120x120.jpg\" alt=\"profile\" />\n\t\t\t\t\t<div className=\"userInfo\">\n\t\t\t\t\t\t<span className=\"name\" data-test=\"name\">Jamal</span>\n\t\t\t\t\t\t<span className=\"company\" data-test=\"company\">JNS Cleaning</span>\n\t\t\t\t\t</div>\n\t\t\t\t</Link>\n\t\t\t</div>\n\t\t\t{ isActive  && \n\t\t\t\t<div className=\"dropMenu right dropMenuVisible\">\n\t\t\t\t\t<ul className=\"headerDropMenu\">\t\n\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t<Link to=\"/users/details/138200\">\n\t\t\t\t\t\t\t\t<span>User profile</span>\n\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t</li>\n\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t<Link to=\"/settings\">\n\t\t\t\t\t\t\t\t<span>Settings</span>\n\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t</li>\n\t\t\t\t\t\t<li className=\"dropMenuSeparator\"></li>\n\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t<Link onClick={logout}>\n\t\t\t\t\t\t\t\t<span>Log out</span>\n\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t</li>\n\t\t\t\t\t</ul>\n\t\t\t\t</div>\n\t\t\t}\n\t\t\t</>\n\t)\n\n}\n\nexport default UserDropMenu;\n\n\n\n\n\n","\nimport React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport './NavBar.css';\nimport UserDropMenu from './components/UserDropMenu';\n\nconst NavBar = () => {\n    \n    return (\n    \n        <nav>\n        <UserDropMenu />\n\n        <div className=\"menuWrapper\">\n            <div id=\"mainmenu\" className=\"clearfix\">\n            <menu className=\"mainmenu\">\n                <div className=\"logo_container\"><h1 className=\"logo\"><Link to=\"/\">Serviceadmin</Link></h1></div>\n                <div id=\"search-spinner\"></div>\n                <li><Link to=\"/\"><span className=\"label\">Home</span></Link></li>\n                <li><Link to=\"/customers\"><span className=\"label\">Customers</span></Link></li>\n                <li><Link to=\"/contractors\"><span className=\"label\">Contractors</span></Link></li>\n                <li><Link to=\"/workorders\"><span className=\"label\">Work Orders</span></Link></li>\n            </menu>\n            </div>\n        </div>    \n        <div className=\"clearfix\"></div>\n        </nav>\n        \n    )\n}\n\nexport default NavBar;","\nimport React, {useState} from 'react';\n\nconst CustomerSideBar = ({customerInfo, customerIncome}) => {\n\n    return (\n\n            <div className=\"sidebar\">\n                <div className=\"widget fieldsView\">\n                    <div className=\"columnTitle\">\n                        <span className=\"columnItem\">Details</span>\n                    </div>\n                    <div className=\"fieldsList\">\n                        \n                        <div className=\"item read varcharField editable\">\n                            <div className=\"labelWrap clearfix\"><span className=\"label\">Name</span></div>\n                            <div className=\"valueWrap singleRow clearfix\"><span className=\"value\">{customerInfo.display_name}</span></div>\n                        </div>\n\n                        <div className=\"item read varcharField editable\">\n                            <div className=\"labelWrap clearfix\"><span className=\"label\">Address</span></div>\n                            <div className=\"valueWrap singleRow clearfix\"><span className=\"value\">432 Fairfax Dr. Ann Arbor MI</span></div>\n                        </div>\n\n                        <div className=\"item read varcharField editable\">\n                            <div className=\"labelWrap clearfix\"><span className=\"label\">Phone</span></div>\n                            <div className=\"valueWrap singleRow clearfix\"><span className=\"value\">{customerInfo.phone}</span></div>\n                        </div>\n\n                        <div className=\"item read varcharField editable\">\n                            <div className=\"labelWrap clearfix\"><span className=\"label\">Email</span></div>\n                            <div className=\"valueWrap singleRow clearfix\"><span className=\"value\">{customerInfo.email}</span></div>\n                        </div>\n\n                    </div>\n                </div>\n            \n                <div className=\"widget\">\n                    <div className=\"columnTitle\">\n                        <span className=\"columnItem\">Overview</span>\n                    </div>\n                    <div className=\"charts\">\n                        \n                        <div className=\"barChart\">\n                            <h3 className=\"chartTitle\">Sales</h3>\n                            <div className=\"bars\">\n                                <div className=\"bar\">\n                                    <div className=\"barContent\">\n\n                                    </div>\n                                </div>\n                            </div>\n                            <div className=\"legend\">\n                                <div className=\"labelWrap\"><span className=\"label\">Total</span></div>\n                                <div className=\"valueWrap singleRow\"><span className=\"value\">{customerIncome.income}</span></div>\n                            </div>\n                        </div>\n\n                        <div className=\"barChart\">\n                            <h3 className=\"chartTitle\">Expenses</h3>\n                            <div className=\"bars\">\n                                <div className=\"bar\">\n                                    <div className=\"barContent\">\n\n                                    </div>\n                                </div>\n                            </div>\n                            <div className=\"legend\">\n                                <div className=\"labelWrap\"><span className=\"label\">Total</span></div>\n                                <div className=\"valueWrap singleRow\"><span className=\"value\">{customerIncome.expense}</span></div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n               \n    )\n}\n\nexport default CustomerSideBar;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\n\n\nclass Tab extends Component {\n  static propTypes = {\n    activeTab: PropTypes.string.isRequired,\n    label: PropTypes.string.isRequired,\n    onClick: PropTypes.func.isRequired,\n  };\n\n  onClick = () => {\n    const { label, onClick } = this.props;\n    onClick(label);\n  }\n\n  render() {\n    const {onClick, props: {activeTab, label}} = this;\n\n    let className = 'tab-list-item';\n\n    if (activeTab === label) {\n      className += ' active';\n    }\n\n    return (\n      <li className={className} onClick={onClick}>\n          <a href=\"#\"><span className=\"headers__tab__title\">{label}</span></a>\n      </li>\n    );\n  }\n}\n\nexport default Tab;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport Tab from './Tab';\n\nclass Tabs extends Component {\n    static propTypes = {\n        children: PropTypes.instanceOf(Array).isRequired,\n    }\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            activeTab: this.props.children[0].props.label,\n        };\n    }\n\n    onClickTabItem = (tab) => {\n        this.setState({ activeTab: tab });\n    }\n\n    render() {\n        const {\n            onClickTabItem,\n            props: {\n                children,\n            },\n            state: {\n                activeTab,\n            }\n        } = this;\n\n        return (\n\n            <div className=\"tabsWrapper\">\n                <div className=\"tabs\">\n                    <ul className=\"headers\">\n                        {\n                            children.map((child) => {\n                                const { label } = child.props;\n                                return (<Tab activeTab={activeTab} key={label} label={label} onClick={onClickTabItem} />);\n                            })\n                        }\n                    </ul>\n                    <div className=\"content\">\n                        {\n                            children.map((child) => {\n                                if (child.props.label !== activeTab) return undefined;\n                                return child.props.children;\n                            })\n                        }\n                    </div>\n                </div>\n            </div>\n\n        );\n    }\n}\n\nexport default Tabs;","\nimport React, {useState, useEffect} from 'react';\nimport Tabs from '../../components/Tabs';\n\nimport './CustomerTabbedView.css';\n\nconst currFormatter = (num) => {\n    return new Intl.NumberFormat(\"en-US\", {style: \"currency\", currency: \"USD\"}).format(num);\n}\n\nconst dateFormatter = (date) => {\n    return new Intl.DateTimeFormat('en-US').format(new Date(date));\n}\n\nconst rowTypeBackgroundStyle = (inv) => {\n\n    let today = new Date()\n\n    if(inv.balance == 0) {\n        return {backgroundColor: '#08a742'};\n    } else if (today > new Date(inv.due_date)) {\n        return {backgroundColor: '#f94839'}; \n    }\n}\n\n\nconst CustomerTabbedView = ({id}) => {\n\n    const [custInvoiceList, setCustInvoiceList] = useState([]);\n    const [custInvoiceListIsLoaded, setCustInvoiceListIsLoaded] = useState(false);\n\n\n    useEffect(() => {\n        console.log(`FETCH CUST DATA`);\n        const fetchData = async () => {\n            const result = await fetch(`/api/customer/:${id}/invoice/list`);\n            const body = await result.json();\n\n            let invoiceList = [];\n            for (const result of body.QueryResponse.Invoice) {\n                let inv = {invoice_id : result.Id,\n                            due_date: result.DueDate,\n                            total: result.TotalAmt,\n                            balance: result.Balance\n                };\n                invoiceList.push(inv);\n            }\n        \n            setCustInvoiceList(invoiceList);\n            setCustInvoiceListIsLoaded(true);\n\n        }\n        \n        fetchData();\n    }, []);\n\n    return (\n        <Tabs>\n            <div label=\"Invoices\">\n                <div className=\"tabContent\">\n\n\n                    <div className=\"listWrapper\">\n                        <div className=\"listHeader\">\n                            <div className=\"listHeaderCell\">INVOICE NUMBER</div>\n                            <div className=\"listHeaderCell\">DUE DATE</div>\n                            <div className=\"listHeaderCell\" style={{textAlign: 'right'}}>BALANCE</div>\n                            <div className=\"listHeaderCell\" style={{textAlign: 'right'}} >TOTAL</div>\n                        </div>\n                    {custInvoiceList.map((inv, key) => (\n                        <div className=\"listRow\" key={inv.invoice_id}>\n                            <div className=\"listCell\"><div className=\"rowType\" style={rowTypeBackgroundStyle(inv)}>Invoice</div>{inv.invoice_id}</div>\n                            <div className=\"listCell\">{dateFormatter(inv.due_date)}</div>\n                            <div className=\"listCell\" style={{textAlign: 'right'}}>{currFormatter(inv.balance)}</div>\n                            <div className=\"listCell\" style={{textAlign: 'right'}}>{currFormatter(inv.total)}</div>\n                        </div>\n                        \n                    ))}\n                    </div>\n                    \n                </div>\n            </div>\n            <div label=\"Work Orders\">\n                <div className=\"tabContent\">\n                    See ya later, <em>Alligator</em>!\n                </div>\n            </div>\n            <div label=\"Activity\">\n                <div className=\"tabContent\">\n                After 'while, <em>Crocodile</em>!\n                </div>\n            </div>\n            <div label=\"Files\">\n                <div className=\"tabContent\">\n                    Nothing to see here, this tab is <em>extinct</em>!\n                </div>\n            </div>\n        </Tabs>\n    )\n}\n\nexport default CustomerTabbedView;","import React, {useState, useEffect} from 'react';\nimport CustomerSideBar from './customer/CustomerSideBar';\nimport CustomerTabbedView from './customer/CustomerTabbedView';\n\nimport './CustomerView.css';\n\nconst CustomerView = ({ match }) => {\n\n    const id = match.params.id;\n\n    const [custData, setCustData] = useState({});\n    const [custIncomeData, setCustInfoData] = useState({});\n    const [custDataIsLoaded, setCustDataIsLoaded] = useState(false);\n\n\n    useEffect(() => {\n        console.log(`FETCH CUST DATA`);\n        const fetchData = async () => {\n            const result = await fetch(`/api/customer/${id}`);\n            const body = await result.json();\n\n            const cust = body.Customer;\n\n            const custInfo = {display_name : cust.DisplayName,\n                        phone: cust.PrimaryPhone.FreeFormNumber,\n                        email: cust.PrimaryEmailAddr.Address,\n                        id: cust.Id\n            };\n\n            console.log(custInfo);\n            setCustData(custInfo);\n            setCustDataIsLoaded(true);\n        }\n\n        const fetchIncomeData = async () => {\n            const result = await fetch(`/api/customer/${id}/income`);\n            const body = await result.json();\n            const report = body.Rows.Row[0].ColData;\n\n            const incomeData = {income: report[1].value, expense: report[2].value, net_income: report[3].value}\n\n            console.log(report);\n            setCustInfoData(incomeData);\n\n        }\n        \n\n        fetchData();\n        fetchIncomeData();\n    }, []);\n\n\n    return (\n        <div className=\"detailViewWrapper\">\n            <div className=\"detailView\">\n                <div className=\"infoBlock\">\n                    <div className=\"content\">\n                        <div className=\"contact icon pictureUpload\">\n                            <div className=\"mask\">\n                                <svg className=\"cui4-icon cui4-icon--blue\">\n                                <svg id=\"icon-person\" viewBox=\"0 0 24 24\"><path d=\"M12 12a4.5 4.5 0 1 0 0-9 4.5 4.5 0 0 0 0 9zm0 2c-3 0-9 1.56-9 4.67V21h18v-2.33c0-3.1-6-4.67-9-4.67z\"></path></svg>\n                                </svg>\n                            </div>\n                        </div>\n                        <h1>{custData.display_name}</h1>\n                        <div className=\"spacer\"></div>\n                    </div>\n                </div>\n                <div className=\"mainBlock\">\n                    <CustomerSideBar customerInfo={custData} customerIncome={custIncomeData} />\n                    <div className=\"content\">\n                        <CustomerTabbedView id={id} />\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default CustomerView;","import React from 'react';\nimport {\n    BrowserRouter as Router,\n    Route,\n} from 'react-router-dom';\n\nimport HomePage from './views/HomePage';\nimport CustomerList from './views/CustomerList';\nimport ContractorList from './views/ContractorList';\nimport WorkOrderList from './views/WorkOrderList';\nimport NavBar from './NavBar';\nimport UserDropMenu from './components/UserDropMenu';\n\n\nimport './App.css';\nimport CustomerView from './views/CustomerView';\n\n\nfunction App() {\n  return (\n      <Router>\n      <NavBar />\n      <div id=\"applicationContainer\">\n        <div id=\"application\">\n          <div id=\"mainview\" className=\"viewContainer\">\n          <Route path=\"/\" component={HomePage} exact/>\n          <Route path=\"/customers\" component={CustomerList} />\n          <Route path=\"/customer/:id\" component={CustomerView} />\n          <Route path=\"/contractors\" component={ContractorList} />\n          <Route path=\"/workorders\" component={WorkOrderList} />\n          </div>\n        </div>\n      </div>\n      </Router>\n   \n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}